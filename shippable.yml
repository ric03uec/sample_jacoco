language: java

jdk:
  - oraclejdk10
  #- oraclejdk8


build:
    
  pre_ci:
    #- curl -SsL https://github.com/docker/compose/releases/download/1.10.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    - sudo docker --version
    #- chmod +x /usr/local/bin/docker-compose
    #- sudo docker-compose --version
    #- mkdir -p /build/myfiles/mounted-dir
    #- cp -vr ./compose-config.yml /build/myfiles/compose-config.yml
    #- cp -vr ./mounted-dir/* /build/myfiles/mounted-dir/
    #- sudo docker-compose -f /build/myfiles/compose-config.yml up -d 
    #- sudo docker ps
  ci:
    # Create folders for test and code coverage
    #- mkdir -p shippable/codecoverage
    - wget -O /usr/local/bin/shipctl https://raw.githubusercontent.com/Shippable/node/master/shipctl/x86_64/Ubuntu_16.04/shipctl
    #- wget -O /usr/local/bin/shippable_jdk https://raw.githubusercontent.com/ric03uec/node/h_2589_jdk/shipctl/x86_64/Ubuntu_16.04/shippable_jdk
    
    # works for oraclejdk10
    #- shipctl jdk set oraclejdk10
    #- eval "shipctl jdk set oraclejdk10"
    - java --version    
    - mvn --version
    - sleep 10
    - echo "============================"
    - source shipctl jdk set oraclejdk8
    # works for oraclejdk8
    - java -version
    - mvn --version
        
    #- mvn install
    #- cp -r target shippable/codecoverage
    #- echo "data" >> shippable/codecoverage/data.txt    
    
 #- ln -s shippable/codecoverage/data.txt shippable/codecoverage/data_link.txt
 #- ls -al shippable/codecoverage
 #- ln -s does_not_exist shippable/codecoverage/this_link_does_not_exist
